{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Nexus IQ Server App Stack.",
  "Parameters": {
    "InstanceSecurityGroup": {
      "Type": "String"
    },
    "InstanceSubnet": {
      "Type": "String"
    },
    "ChefRecipeVersion": {
      "Type": "String"
    },
    "DeleteBlockDeviceOnTermination": {
      "Type": "String"
    },
    "InstanceType": {
      "Type": "String"
    },
    "JavaDownloadUrl": {
      "Type": "String"
    },
    "JavaSha256": {
      "Type": "String"
    },
    "KeyName": {
      "Type": "String"
    },
    "LogGroupName": {
      "Type": "String"
    },
    "NexusIQVersion": {
      "Type": "String"
    },
    "NexusIQSha256": {
      "Type": "String"
    }
  },
  "Mappings": {
    "AmiRegionMap": {
      "us-east-1": {
        "centos7": "ami-ae7bfdb8"
      },
      "us-east-2": {
        "centos7": "ami-9cbf9bf9"
      },
      "us-west-2": {
        "centos7": "ami-0c2aba6c"
      },
      "eu-west-1": {
        "centos7": "ami-0d063c6b"
      },
      "eu-central-1": {
        "centos7": "ami-7cbc6e13"
      },
      "ap-southeast-2": {
        "centos7": "ami-24959b47"
      },
      "ca-central-1": {
        "centos7": "ami-daeb57be"
      }
    }
  },
  "Conditions": {
    "HasKeyName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "KeyName"
            }
          ]
        }
      ]
    },
    "HasLogGroupName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "LogGroupName"
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "NexusInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AmiRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "centos7"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "InstanceRoleInstanceProfile"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": {
                "Ref": "DeleteBlockDeviceOnTermination"
              }
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex":0,
            "SubnetId": {
              "Ref": "InstanceSubnet"
            },
            "GroupSet": [
              {
                "Ref": "InstanceSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ],
        "KeyName": {
          "Fn::If": [
            "HasKeyName",
            {
              "Ref": "KeyName"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Platform",
            "Value": "nexus-iq-server"
          },
          {
            "Key": "Version",
            "Value": {
              "Ref": "NexusIQVersion"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#cloud-config",
                "packages:",
                " - wget",
                " - python",
                " - ruby",
                " - epel-release",
                "bootcmd:",
                " - 'echo [main] > /etc/yum/pluginconf.d/fastestmirror.conf'",
                " - 'echo enabled=0 >> /etc/yum/pluginconf.d/fastestmirror.conf'",
                "users:",
                " - default",
                " - awslogs",
                "write_files:",
                " - content: |",
                "     [general]",
                "     state_file=/var/awslogs/agent-state",
                "     [cloud-init.log]",
                "     file = /var/log/cloud-init.log",
                {
                  "Fn::Join": [
                    "",
                    [
                      "     log_group_name = ",
                      {
                        "Fn::If": [
                          "HasLogGroupName",
                          {
                            "Ref": "LogGroupName"
                          },
                          {
                            "Ref": "LogGroup"
                          }
                        ]
                      }
                    ]
                  ]
                },
                "     log_stream_name = {instance_id}/cloud-init.log",
                "     datetime_format = %Y-%m-%d %H:%M:%S,%f",
                "     multi_line_start_pattern = {datetime_format}",
                "     [cloud-init-output.log]",
                "     file = /var/log/cloud-init-output.log",
                {
                  "Fn::Join": [
                    "",
                    [
                      "     log_group_name = ",
                      {
                        "Fn::If": [
                          "HasLogGroupName",
                          {
                            "Ref": "LogGroupName"
                          },
                          {
                            "Ref": "LogGroup"
                          }
                        ]
                      }
                    ]
                  ]
                },
                "     log_stream_name = {instance_id}/cloud-init-output.log",
                "     datetime_format = %Y-%m-%d %H:%M:%S,%f",
                "     multi_line_start_pattern = {datetime_format}",
                "     [cfn-init-cmd.log]",
                "     file = /var/log/cfn-init-cmd.log",
                {
                  "Fn::Join": [
                    "",
                    [
                      "     log_group_name = ",
                      {
                        "Fn::If": [
                          "HasLogGroupName",
                          {
                            "Ref": "LogGroupName"
                          },
                          {
                            "Ref": "LogGroup"
                          }
                        ]
                      }
                    ]
                  ]
                },
                "     log_stream_name = {instance_id}/cfn-init-cmd.log",
                "     datetime_format = %Y-%m-%d %H:%M:%S,%f",
                "     multi_line_start_pattern = {datetime_format}",
                "     [clm-server.log]",
                "     file = /var/log/nexus-iq-server/clm-server.log",
                {
                  "Fn::Join": [
                    "",
                    [
                      "     log_group_name = ",
                      {
                        "Fn::If": [
                          "HasLogGroupName",
                          {
                            "Ref": "LogGroupName"
                          },
                          {
                            "Ref": "LogGroup"
                          }
                        ]
                      }
                    ]
                  ]
                },
                "     log_stream_name = {instance_id}/clm-server.log",
                "     datetime_format = %Y-%m-%d %H:%M:%S,%f%z",
                "     multi_line_start_pattern = {datetime_format}",
                "   path: /etc/awslogs/nexus.conf",
                "   permissions: '0644'",
                " - content: |",
                "     #!/bin/sh",
                "     set -x",
                "     wget -nv --retry-connrefused -tinf --waitretry=5 -T5 https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O /tmp/awslogs-agent-setup.py",
                "     wget -nv --retry-connrefused -tinf --waitretry=5 -T5 https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz -O /tmp/aws-cfn-bootstrap-latest.tar.gz",
                {
                  "Fn::Join": [
                    "",
                    [
                      "     python /tmp/awslogs-agent-setup.py -n -r ",
                      {
                        "Ref": "AWS::Region"
                      },
                      " -c /etc/awslogs/nexus.conf"
                    ]
                  ]
                },
                "     yum install -y pip",
                "     type aws || pip install awscli",
                "     service awslogs start",
                "     mkdir -p /opt/aws-cfn-bootstrap/",
                "     tar -xzf /tmp/aws-cfn-bootstrap-latest.tar.gz -C /opt/aws-cfn-bootstrap/ --strip-components=1",
                "     cd /opt/aws-cfn-bootstrap && python setup.py install",
                {
                  "Fn::Join": [
                    "",
                    [
                      "     region=",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "     stackname=",
                      {
                        "Ref": "AWS::StackName"
                      }
                    ]
                  ]
                },
                "     python /opt/aws-cfn-bootstrap/bin/cfn-init -v --stack $stackname --resource NexusInstance --region $region",
                "   path: /opt/cloudformation/install-aws.sh",
                "   permissions: '0755'",
                "runcmd:",
                " - /opt/cloudformation/install-aws.sh"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/tmp/install.sh": {
                "source": "https://omnitruck.chef.io/install.sh",
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/var/chef/chef-repo/.chef/solo.rb": {
                "content": "cookbook_path [ '/var/chef/chef-repo/cookbooks' ]\nfile_cache_path '/tmp'\n",
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/var/chef/chef-repo/.chef/solo.json": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "{",
                      "  \"run_list\": [\"recipe[nexus_iq_server]\"],",
                      "  \"java\": {",
                      "    \"jdk\": {",
                      "      \"8\": {",
                      "        \"x86_64\": {",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "          \"url\": \"",
                            {
                              "Ref": "JavaDownloadUrl"
                            },
                            "\","
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "          \"checksum\": \"",
                            {
                              "Ref": "JavaSha256"
                            },
                            "\""
                          ]
                        ]
                      },
                      "        }",
                      "      }",
                      "    }",
                      "  },",
                      "  \"nexus_iq_server\": {",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "    \"version\": \"",
                            {
                              "Ref": "NexusIQVersion"
                            },
                            "\","
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "    \"checksum\": \"",
                            {
                              "Ref": "NexusIQSha256"
                            },
                            "\""
                          ]
                        ]
                      },
                      "  }",
                      "}"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "01_install_chef": {
                "command": "bash /tmp/install.sh",
                "cwd": "/var/chef"
              },
              "02_chef_solo": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "chef-solo -c /var/chef/chef-repo/.chef/solo.rb -j /var/chef/chef-repo/.chef/solo.json --recipe-url ",
                      "https://github.com/sonatype/chef-nexus-iq-server/releases/download/",
                      {
                        "Ref": "ChefRecipeVersion"
                      },
                      "/chef-nexus-iq-server.tar.gz"
                    ]
                  ]
                },
                "cwd": "/var/chef/chef-repo"
              }
            }
          }
        }
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "InstanceRolePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:Create*",
                    "logs:PutLogEvents",
                    "s3:GetObject"
                  ],
                  "Resource": [
                    "arn:aws:logs:*:*:*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "InstanceRoleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays":7
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Description": "URL for Nexus IQ Server",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "NexusInstance",
                "PublicDnsName"
              ]
            },
            ":8070"
          ]
        ]
      }
    },
    "LogGroup": {
      "Value": {
        "Ref": "LogGroup"
      }
    }
  }
}
